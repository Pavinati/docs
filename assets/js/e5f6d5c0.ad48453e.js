"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[318],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=p(a),u=r,m=h["".concat(s,".").concat(u)]||h[u]||d[u]||i;return a?n.createElement(m,o(o({ref:t},c),{},{components:a})):n.createElement(m,o({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},8653:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={sidebar_position:3},o="APIs References",l={unversionedId:"get_started/apis_references",id:"get_started/apis_references",title:"APIs References",description:"Overview",source:"@site/docs/2_get_started/3-apis_references.md",sourceDirName:"2_get_started",slug:"/get_started/apis_references",permalink:"/get_started/apis_references",draft:!1,editUrl:"https://github.com/clea-platform/clea-developers-doc/docs/2_get_started/3-apis_references.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Create a third-party Clea Portal App",permalink:"/get_started/create_a_clea_portal_app"},next:{title:"Clea Portal",permalink:"/clea_portal_walkthrough/clea_portal"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Clea Portal GraphQL APIs",id:"clea-portal-graphql-apis",level:2},{value:"Login",id:"login",level:4},{value:"Appliances List",id:"appliances-list",level:4},{value:"Single Appliance Data",id:"single-appliance-data",level:4},{value:"User and Preferences",id:"user-and-preferences",level:4},{value:"Edgehog GraphQL APIs",id:"edgehog-graphql-apis",level:2},{value:"Astarte REST API",id:"astarte-rest-api",level:2}],c={toc:p};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"apis-references"},"APIs References"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Clea provides a complete set of APIs to interact and manage aspects of the platform and the data it contains. All the main features of Clea are available through the Public APIs of the platform components."),(0,r.kt)("p",null,"Different types of APIs are available depending on the data or functionality you want to access:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Clea Portal"),": Regarding the data managed by the ",(0,r.kt)("strong",{parentName:"li"},"Clea Portal"),", it is possible to use the queries made available in the ",(0,r.kt)("strong",{parentName:"li"},"GraphQL")," language. The information that you can access is, for example, the list of Appliances, the detailed data of the single Appliances, the information about users and roles, and others."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Edgehog"),": Suppose you want to access the device management features made available by ",(0,r.kt)("strong",{parentName:"li"},"Edgehog"),". In that case, you can use its ",(0,r.kt)("strong",{parentName:"li"},"GraphQL")," APIs that allow you to perform monitoring and fleet operations such as update campaigns and others."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Astarte"),": As far as the data sent by the Appliances and the commands you need to send to the machines are concerned, it is possible to interact directly with the ",(0,r.kt)("strong",{parentName:"li"},"Astarte")," platform using the Astarte ",(0,r.kt)("strong",{parentName:"li"},"REST API"),".")),(0,r.kt)("p",null,"These references will help developers integrate Clea services inside their workflow and company applications."),(0,r.kt)("h2",{id:"clea-portal-graphql-apis"},"Clea Portal GraphQL APIs"),(0,r.kt)("p",null,"The GraphQL APIs are self-describing and easy to understand. You can download the complete query schema with any GraphQL API interaction tool, such as ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-cli"},"graphql-ci"),"."),(0,r.kt)("p",null,"The URL address of the Clea GraphQL API is different depending on the Tenant."),(0,r.kt)("p",null,"Here are some examples of the most relevant GraphQL queries."),(0,r.kt)("h4",{id:"login"},"Login"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mutation Login($input: LoginInput!) {\n  login(input: $input) {\n    token\n  }\n}\n")),(0,r.kt)("p",null,"You can use the credentials of a Clea user to login. The user will be able to read information from Clea, according to the permissions set for him via the Clea Portal interface."),(0,r.kt)("h4",{id:"appliances-list"},"Appliances List"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"query GetAppliances {\n  appliances(filter: { assigned: true }) {\n    id\n    name\n    serial\n    tags\n  }\n}\n")),(0,r.kt)("h4",{id:"single-appliance-data"},"Single Appliance Data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"query GetAppliance($id: ID!) {\n  appliance(id: $id) {\n    id\n    name\n    serial\n    tags\n    device {\n      deviceId\n      realm\n      baseApiUrl\n      online\n      availableApplications {\n        id\n        authToken\n      }\n    }\n  }\n}\n")),(0,r.kt)("h4",{id:"user-and-preferences"},"User and Preferences"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"query GetViewer {\n  viewer {\n    id\n    name\n    email\n    roles {\n      id\n      name\n    }\n    preferences {\n      language\n    }\n  }\n}\n")),(0,r.kt)("h2",{id:"edgehog-graphql-apis"},"Edgehog GraphQL APIs"),(0,r.kt)("p",null,"Edgehog also provides GraphQL API interfaces. As stated earlier, these are self-describing, and you can download the complete query schema with any GraphQL API interaction tool, such as ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-cli"},"graphql-ci"),"."),(0,r.kt)("p",null,"You can find more information on interacting on devices through Edgehog's API features on the ",(0,r.kt)("a",{parentName:"p",href:"https://edgehog-device-manager.github.io/docs/snapshot/interacting_with_edgehog.html#content"},"official Edgehog documentation"),".\nEdgehog's GraphQL APIs are also described on this useful ",(0,r.kt)("a",{parentName:"p",href:"https://edgehog-device-manager.github.io/docs/snapshot/graphql-api-docs/"},"API Reference page"),"."),(0,r.kt)("h2",{id:"astarte-rest-api"},"Astarte REST API"),(0,r.kt)("p",null,"Regarding the data sent and the commands to be sent to the machines, it is possible to interact directly with the data contained in the Astarte platform on which Clea relies."),(0,r.kt)("p",null,"For complete documentation of the Astarte APIs, you can consult the following pages:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Complete ",(0,r.kt)("a",{parentName:"li",href:"https://docs.astarte-platform.org"},"Astarte documentation"),"."),(0,r.kt)("li",{parentName:"ul"},"Documentation of the ",(0,r.kt)("a",{parentName:"li",href:"https://docs.astarte-platform.org/latest/api/index.html"},"Astarte Rest APIs")," released through Swagger files (OpenAPI specifications).")),(0,r.kt)("p",null,"From the GraphQL queries described in the previous section, it is possible to get the data needed to make the API calls that operate on the Astarte interfaces to request data or send commands to the machine."),(0,r.kt)("p",null,"You can take the base URL and the authorization token values from the GraphQL query that provides the appliance data:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The base URL is ",(0,r.kt)("inlineCode",{parentName:"li"},"baseApiUrl")),(0,r.kt)("li",{parentName:"ul"},"The authorization token ",(0,r.kt)("inlineCode",{parentName:"li"},"authToken")," can be obtained from the ",(0,r.kt)("inlineCode",{parentName:"li"},"setup-app")," entry in the ",(0,r.kt)("inlineCode",{parentName:"li"},"availableApplications"),".")),(0,r.kt)("p",null,"Thanks to these data, it is possible to make REST calls to Astarte APIs. It is also necessary to know the Astarte interfaces used by devices to exchange data for completing the necessary API calls."),(0,r.kt)("p",null,"For example, the queries to be used will have the form:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"${baseApiUrl}/appengine/v1/${tenantName}/devices/${deviceId}/interfaces/${interfaceName}${path}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"GET")," calls can be used to get the data, and ",(0,r.kt)("strong",{parentName:"p"},"POST")," calls can be used to send it."))}d.isMDXComponent=!0}}]);